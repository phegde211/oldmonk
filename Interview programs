1. Remove all occurances of a value in a single linked list.

void remove(struct llnode **head, int val)
{
    struct llnode *trav, *prev, *del;
    trav = prev = NULL;
    while (trav) {
          if (trav->data == val) {
              del = trav;
          }
          if (!del) {
              if (!prev) {
                  *head = trav;
              }
              prev = trav;
          }
          trav = trav->next;
          if (del) {
              free(del);
              del = NULL;
              if (prev) {
                  prev->next = trav;
          }
    }
    if (!prev) {
        *head = NULL;
    }
}


2. Maximum Subarray
 Find the contiguous subarray within an array (containing at least one number) which has the largest sum.For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
 the contiguous subarray [4,-1,2,1] has the largest sum = 6.
 
 /* a = array of nos, len = length of the array, lindex = left index of subaray, rindex = right index of subarray */
 void subarr(int *a, int len, int *lindex, int *rindex)
 {
    int ws = i = j = 0;
    int max = MINMAX or -2 pow 32-1. 
    while (j < len) {
        ws += a[j];
        if (ws > max) {
            max = ws;
            *lindex = i;
            *rindex = j;
        }
        j++;
        while (i < j && ws < 0) {
            ws -= a[i];
            i++;
        }
    }
    return;
 }
 
